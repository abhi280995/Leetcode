/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        if(l1==NULL&&l2==NULL)
            return NULL;
        
        if(l1!=NULL&&l2==NULL)
            return l1;
        if(l2!=NULL&&l1==NULL)
            return l2;
        
        ListNode* res=new ListNode(-1);
        
        ListNode* ans=res;
        
        
      //  cout<<"out";
        
        int carry=0;
        
        while(l1||l2||carry)
        {
            
           int temp=0; 
            
         //   cout<<"yoo";
            
            if(l1)
            {
                temp=temp+l1->val;
                l1=l1->next;
            }
            if(l2)
            {
                temp=temp+l2->val;
                l2=l2->next;
            }
            temp=temp+carry;
            if(temp>9)
            {
                carry=temp/10;
                temp=temp%10;
            }
            else
                carry=0;
            ans->next=new ListNode(temp);
            ans=ans->next;
        
        }
        
        return res->next;
    }
};
